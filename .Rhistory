library(ggplot2)
library(dplyr)
library(psych)
library(lavaan)
library(semPlot)
bf_model <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
neurot =~ N1 + N2 + N3 + N4 + N5
openness =~ O1 + O2 + O3 + O4 + O5 '
semPaths(semPlotModel(bf_model), rotation = 2)
bf_fit <- cfa(bf_model, data = bfi)
summary(bf_fit, standardized = TRUE, fit.measures = TRUE) #for Fit statistics
modindices(bf_fit) %>%
arrange(desc(mi)) %>%
select(lhs, op, rhs, mi) %>%
head(10)
?bfi
bf_model_re1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
neurot =~ N1 + N2 + N3 + N4 + N5
openness =~ O1 + O2 + O3 + O4 + O5
N1 ~~ N2
N3 ~~ N4'
bf_model_re1.1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
anx =~ N1 + N2
dep =~ N3 + N4
neurot =~ anx + dep + N5
openness =~ O1 + O2 + O3 + O4 + O5 '
bf_model_re1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
neurot =~ N1 + N2 + N3 + N4 + N5
openness =~ O1 + O2 + O3 + O4 + O5
N1 ~~ N2
N3 ~~ N4'
bf_model_re1.1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
anx =~ N1 + N2
dep =~ N3 + N4
neurot =~ anx + dep + N5
openness =~ O1 + O2 + O3 + O4 + O5 '
bf_model_re1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
neurot =~ N1 + N2 + N3 + N4 + N5
openness =~ O1 + O2 + O3 + O4 + O5
N1 ~~ N2
N3 ~~ N4'
bf_model_re1.1 <- ' agreeable =~ A1 + A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
anx =~ N1 + N2
dep =~ N3 + N4
neurot =~ anx + dep + N5
openness =~ O1 + O2 + O3 + O4 + O5 '
bf_model_re2 <- ' agreeable =~ A2 + A3 + A4 + A5
conscient =~ C1 + C2 + C3 + C4 + C5
extrov =~ E1 + E2 + E3 + E4 + E5
neurot =~ N1 + N2 + N3 + N4 + N5
openness =~ O1 + O2 + O3 + O5
N1 ~~ N2
N3 ~~ N4'
bf_fit_re2 <- cfa(bf_model_re2, data = bfi)
summary(bf_fit_re2, standardized = TRUE, fit.measures=TRUE)
modindices(bf_fit_re2) %>%
arrange(desc(mi)) %>%
select(lhs, op, rhs, mi) %>%
head(10)
library(tidyverse)
library(GPArotation)
library(psych)
library(haven)
library(lavaan)
library(semPlot)
library(gridExtra)
library(mosaic)
library(manipulate)
sdo <- read_sav("http://www.science.smith.edu/~rgarcia/sds390-S19/sdo_identity.sav")
#glimpse(sdo)
variable_view <- function(data){
my.list = list()
for (i in names(data)){
#if the label is numeric then it's a "labels"; if it's null then it has neither a label or labels
label = (c(i, ifelse(is.numeric(attr(data[[as.name(i)]],"label")) | is.null(attr(data[[as.name(i)]],"label")),
NA,
attr(data[[as.name(i)]],"label"))))
my.list[[i]] = label
}
attributes = data.frame(matrix(unlist(my.list),ncol = 2,byrow = TRUE))
colnames(attributes)[1] <- "variable"
colnames(attributes)[2] <- "label"
return(attributes)
}
variable_view <- variable_view(sdo)
#variable_view
table(sdo$collact1)
p1 <- qplot(x = collact1, data = sdo, bins = 7)
p2 <- qplot(x = collact2, data = sdo, bins = 7)
p3 <- qplot(x = collact3, data = sdo, bins = 7)
p4 <-qplot(x = collact4, data = sdo, bins = 7)
p5 <-qplot(x = collact5, data = sdo, bins = 7)
p6 <-qplot(x = collact, data = sdo, bins = 7)
grid.arrange(p1, p2,p3,p4,p5,p6, nrow = 2)
#mplot(sdo)
sdo$gender<-as.factor(sdo$gender)
#Plot 1. sdo and collact
ggplot(data = sdo, aes(x = sdo, y = collact)) + geom_point()  + aes(colour = gender) + theme(legend.position = "right") + labs(title = "Relationship between SDO and COLLACT")+
geom_smooth(method='lm')
#Plot 1. sdo and hsexism
ggplot(data = sdo, aes(x = sdo, y = hsexism)) + geom_point()  + aes(colour = gender) + theme(legend.position = "right") + labs(title = "Relationship between SDO and Hsexism")+
geom_smooth(method='lm')
#Plot 3.  SDO and Identification
ggplot(data = sdo, aes(x = sdo, y = identification)) + geom_point()  + aes(colour = gender) + theme(legend.position = "right") + labs(title = "Relationship between SDO and Identification")+
geom_smooth(method='lm')
#Plot 4. Identification and Collact
ggplot(data = sdo, aes(x = identification, y = collact)) + geom_point()  + aes(colour = gender) + theme(legend.position = "right") + labs(title = "Relationship between Identification and Collact")+
geom_smooth(method='lm')
#Plot 5. hsexism and collact
ggplot(data = sdo, aes(x = hsexism, y = collact)) + geom_point()  + aes(colour = gender) + theme(legend.position = "right") + labs(title = "Relationship between Hsexism and Collact")+
geom_smooth(method='lm')
model <- 'collact ~ sdo+identification+hsexism
identification ~ sdo
hsexism ~  sdo'
fit <- sem(model, data = sdo)
summary(fit)
semPaths(fit)
semPaths(fit, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
matrix_hostile <- corr.test(select(sdo, hs1:hs11))$r
cor.plot(matrix_hostile)
sdo_hs_edit <-sdo%>%
select(-hs4, -hs10, -hs11)
matrix_hostile_hs_edit <- corr.test(select(sdo_hs_edit, hs1:hs3, hs5:hs9))$r
cor.plot(matrix_hostile_hs_edit)
cor_matrix <- corr.test(select(sdo, id1:id14))$r
fa <- fa(cor_matrix, nfactors = 5, rotate = "oblimin", fm = "pa")
round(fa$weights, 2)
fa
meas_model <- 'identity =~ id1 + id2 + id3 + id4 + id5 + id6 + id7 +
id8 + id9 + id10 + id11 + id12 + id13 + id14
hsexism =~ hs1 + hs2 + hs3 + hs4 + hs5 + hs6 + hs7 +
hs8 + hs9 + hs10 + hs11
collact =~ collact1 + collact2 + collact3 + collact4 + collact5
sdo =~ sdo1 + sdo2 + sdo3 + sdo4'
cfa_fit <- cfa(meas_model, data = sdo)
summary(cfa_fit, standardized = TRUE, fit.measures = TRUE)
cfa_fit
semPaths(cfa_fit, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
summary(cfa_fit, standardized = TRUE, fit.measures = TRUE)
matrix_id <- corr.test(select(sdo, id1:id14))$r
matrix_id
cor.plot(matrix_id)
meas_model_re1 <-'identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14'
cfa_fit_re1 <- cfa(meas_model_re1, data = sdo)
summary(cfa_fit_re1, standardized = TRUE, fit.measures = TRUE)
semPaths(cfa_fit_re1, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
meas_model_re1 <-'identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14'
cfa_fit_re1 <- cfa(meas_model_re1, data = sdo)
summary(cfa_fit_re1, standardized = TRUE, fit.measures = TRUE)
meas_model_re2 <-'identity1 =~ id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14'
cfa_fit_re2 <- cfa(meas_model_re2, data = sdo)
summary(cfa_fit_re2, standardized = TRUE, fit.measures = TRUE)
final_meas_model <-'identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo1 + sdo2 + sdo3 + sdo4'
cfa_fit <- cfa(final_meas_model, data = sdo)
summary(cfa_fit, standardized = TRUE, fit.measures = TRUE)
cfa_fit
sem_model <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo1 + sdo2 + sdo3 + sdo4
#Structural model
collact ~ sdo + identity1 + identity2+ identity3+ identity4 + identity5 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit <- sem(sem_model, data = sdo)
summary(sem_fit, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
sem_model_re <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo1 + sdo2 + sdo3 + sdo4
#Structural model
collact ~ identity1 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit_re <- sem(sem_model, data = sdo)
summary(sem_fit_re, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit_re, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
sem_model_re <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo2 + sdo1 +sdo3 + sdo4
#Structural model
collact ~ identity1 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit_re <- sem(sem_model, data = sdo)
summary(sem_fit_re, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit_re, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
sem_model_re <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo1+sdo2 +  +sdo3 + sdo4
#Structural model
collact ~ identity1 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit_re <- sem(sem_model, data = sdo)
summary(sem_fit_re, standardized = TRUE, fit.measures = TRUE)
sem_model_re <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo2 +sdo1+  sdo3 + sdo4
#Structural model
collact ~ identity1 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit_re <- sem(sem_model, data = sdo)
summary(sem_fit_re, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit_re, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
sem_model_re <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo2 +sdo1+  sdo3 + sdo4
#Structural model
collact ~ identity1 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit_re <- sem(sem_model_re, data = sdo)
summary(sem_fit_re, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit_re, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
sem_model <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~  sdo2 + sdo1 + sdo3 + sdo4
#Structural model
collact ~ sdo + identity1 + identity2+ identity3+ identity4 + identity5 + hsexism
identity2~ sdo
hsexism ~  sdo'
sem_fit <- sem(sem_model, data = sdo)
summary(sem_fit, standardized = TRUE, fit.measures = TRUE)
#semPaths(sem_fit, what = "est", intercepts = FALSE, style = "lisrel", rotation = 2)
final_meas_model <-'identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~ sdo2 + sdo1 + sdo3 + sdo4'
cfa_fit <- cfa(final_meas_model, data = sdo)
summary(cfa_fit, standardized = TRUE, fit.measures = TRUE)
cfa_fit
sem_model_final <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
selfDefinition =~ identity1 + identity2 + identity3
selfInvestiment =~ identity4 + identity5
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~sdo2 + sdo1 +sdo3 + sdo4
#Structural model
collact ~ sdo + selfDefinition + selfInvestiment + hsexism
selfDefinition ~ sdo
hsexism ~  sdo
selfDefinition~~selfInvestiment'
sem_fit <- sem(sem_model_final, data = sdo)
summary(sem_fit, standardized = TRUE, fit.measures = TRUE)
sem_model_final <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
selfDefinition =~ identity1 +identity4 + identity5
selfInvestiment =~ identity2 + identity3
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~sdo2 + sdo1 +sdo3 + sdo4
#Structural model
collact ~ sdo + selfDefinition + selfInvestiment + hsexism
selfDefinition ~ sdo
hsexism ~  sdo
selfDefinition~~selfInvestiment'
sem_fit <- sem(sem_model_final, data = sdo)
summary(sem_fit, standardized = TRUE, fit.measures = TRUE)
modindices(sem_model_final) %>%
arrange(desc(mi)) %>%
select(lhs, op, rhs, mi)
modindices(sem_model_final)
modindices(sem_model_final) %>%
arrange(desc(mi)) %>%
select(lhs, op, rhs, mi)
modindices(sem_model_final)
modindices(sem_fit) %>%
arrange(desc(mi)) %>%
select(lhs, op, rhs, mi)
sem_model_final <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
selfDefinition =~ identity1 +identity4 + identity5
selfInvestiment =~ identity2 + identity3
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~sdo2 + sdo1 +sdo3 + sdo4
#Structural model
collact ~ sdo + selfDefinition + selfInvestiment + hsexism
selfDefinition ~ sdo
hsexism ~  sdo
selfDefinition~~selfInvestiment +id1 +id10 +id9
selfInvestiment =~ id1 +id12 +id11
hsexism =~ id14 '
sem_fit <- sem(sem_model_final, data = sdo)
sem_model_final <- '#Measurement model
identity1 =~ id1 + id2 + id3
identity2 =~ id4 + id5 + id6 + id7
identity3 =~ id9 + id10
identity4 =~ id11 + id12
identity5 =~ id13 + id14
selfDefinition =~ identity1 +identity4 + identity5
selfInvestiment =~ identity2 + identity3
hsexism =~ hs2 + hs3 + hs7 + hs8 + hs9
collact =~ collact1 + collact2 + collact3 + collact4
sdo =~sdo2 + sdo1 +sdo3 + sdo4
#Structural model
collact ~ sdo + selfDefinition + selfInvestiment + hsexism
selfDefinition ~ sdo
hsexism ~  sdo
selfDefinition ~~selfInvestiment
selfDefinition =~ id1 +id10 +id9
selfInvestiment =~ id1 +id12 +id11
hsexism =~ id14 '
sem_fit <- sem(sem_model_final, data = sdo)
summary(sem_fit, standardized = TRUE, fit.measures = TRUE)
library(BiocInstaller)
BiocInstaller::biocLite("rhdf5")
library(rhdf5)
library(devtools)
#rhdf5
install.packages("rhdf5")
versiondevtools::install_github("beanumber/cranium")
install_github("beanumber/cranium")
devtools::install_github("beanumber/cranium")
library(cranium)
BiocInstaller::biocLite("rhdf5")
library(rhdf5)
BiocInstaller::biocLite("rhdf5")
library(rhdf5)
library(cranium)
devtools::install_github("beanumber/cranium")
library(cranium)
install.packages("BiocInstaller",
repos = "http://bioconductor.org/packages/3.4/bioc")
knitr::opts_chunk$set(echo = TRUE)
library(BiocInstaller)
library(BiocInstaller)
BiocInstaller::biocLite("rhdf5")
library(rhdf5)
#install.packages("devtools")
library(devtools)
devtools::install_github("beanumber/cranium")
library(cranium)
devtools::install_github("beanumber/cranium")
devtools::install_github("beanumber/cranium")
install.packages("BiocInstaller",
repos = "http://bioconductor.org/packages/3.5/bioc")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
library(BiocInstaller)
knitr::opts_chunk$set(echo = TRUE)
BiocInstaller::biocLite("rhdf5")
library(rhdf5)
devtools::install_github("beanumber/cranium")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocInstaller", version = "3.8")
BiocInstaller::biocLite("rhdf5")
install.packages("hdf5r")
library("hdf5r", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(hdf5r)
devtools::install_github("beanumber/cranium")
devtools::install_github("beanumber/cranium")
devtools::install_github("beanumber/cranium")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
devtools::install_github("beanumber/cranium")
library(cranium)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
devtools::install_github("beanumber/cranium")
defaults write org.R-project.R force.LANG en_US.UTF-8
defaults write org.R-project.R force.LANG en_US.UTF-8
devtools::install_github("beanumber/cranium")
knitr::opts_chunk$set(echo = TRUE)
library(BiocInstaller)
library(rhdf5)
library(BiocInstaller)
library(hdf5r)
#install.packages("devtools")
library(devtools)
devtools::install_github("beanumber/cranium")
file <- "~/experiments/data_split/Experiment/AT/AT_wildtype_101_Probabilities.h5"
library(tidyverse)
tidy_brain <- file %>%
read_h5() %>%
tidy()
library(rhdf5)
tidy_brain <- file %>%
read_h5() %>%
tidy()
tidy_brain <- file %>%
read_h5() %>%
tidy()
library(cranium)
tidy_brain <- file %>%
read_h5() %>%
tidy()
file <- "~/experiments/data_split/Experiment/AT/AT_wildtype_101_Probabilities.h5"
tidy_brain <- file %>%
read_h5() %>%
tidy()
tidy_brain <- file %>%
read_h5() %>%
tidy()
file <- "experiments/data_split/Experiment/AT/AT_wildtype_101_Probabilities.h5"
tidy_brain <- file %>%
read_h5() %>%
tidy()
library(tidyverse)
tidy_brain <- file %>%
read_h5() %>%
tidy()
library(tidyr)
tidy_brain <- file %>%
read_h5() %>%
tidy()
detach("package:tidyverse", unload=TRUE)
tidy_brain <- file %>%
read_h5() %>%
tidy()
library(broom)
tidy_brain <- file %>%
read_h5() %>%
tidy()
plot3d(tidy_brain)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plot3d(tidy_brain)
library(rgl)
install.packages("XQuartz")
View(tidy_brain)
